    Checking gsr v1.1.0 (/Users/christophethibaut/Coding/gsr)
warning: the borrowed expression implements the required traits
  --> src/picture_entry.rs:87:37
   |
87 |         if !self.file_path.contains(&THUMB_SUFFIX) {
   |                                     ^^^^^^^^^^^^^ help: change this to: `THUMB_SUFFIX`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args
   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default

warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> src/picture_entry.rs:96:25
   |
96 |                 None => &file_stem,
   |                         ^^^^^^^^^^ help: change this to: `file_stem`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
   = note: `#[warn(clippy::needless_borrow)]` on by default

warning: the borrowed expression implements the required traits
   --> src/picture_entry.rs:105:36
    |
105 |         if self.file_path.contains(&THUMB_SUFFIX) {
    |                                    ^^^^^^^^^^^^^ help: change this to: `THUMB_SUFFIX`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args

warning: length comparison to zero
   --> src/picture_entry.rs:149:12
    |
149 |         if self.label.len() > 0 {
    |            ^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.label.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero
    = note: `#[warn(clippy::len_zero)]` on by default

warning: length comparison to zero
   --> src/picture_entry.rs:170:12
    |
170 |         if tag.len() > 0 {
    |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!tag.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: using `clone` on type `Rank` which implements the `Copy` trait
   --> src/picture_entry.rs:192:20
    |
192 |         let cmp = (self.rank.clone() as usize).cmp(&(other.rank.clone() as usize));
    |                    ^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.rank`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy
    = note: `#[warn(clippy::clone_on_copy)]` on by default

warning: using `clone` on type `Rank` which implements the `Copy` trait
   --> src/picture_entry.rs:192:54
    |
192 |         let cmp = (self.rank.clone() as usize).cmp(&(other.rank.clone() as usize));
    |                                                      ^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `other.rank`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: using `Result.and_then(|x| Ok(y))`, which is more succinctly expressed as `map(|x| y)`
   --> src/picture_entry.rs:215:25
    |
215 | /                         copy_file_to_target_directory(&self.image_data_file_path(), target_dir)
216 | |                             .and_then(|r3| {
217 | |                                 Ok(r1+r2+r3)
218 | |                             })
    | |______________________________^ help: try: `copy_file_to_target_directory(&self.image_data_file_path(), target_dir).map(|r3| r1+r2+r3)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bind_instead_of_map
    = note: `#[warn(clippy::bind_instead_of_map)]` on by default

warning: length comparison to zero
   --> src/picture_entry.rs:232:16
    |
232 |             if self.label.len() > 0 {
    |                ^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.label.is_empty()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero

warning: useless use of `format!`
   --> src/picture_entry.rs:233:17
    |
233 |                 format!("{}", self.label)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `self.label.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format
    = note: `#[warn(clippy::useless_format)]` on by default

warning: if let can be simplified with `.unwrap_or_default()`
   --> src/picture_entry.rs:255:13
    |
255 | /             if let Some(s) = self.label() {
256 | |                 s
257 | |             } else {
258 | |                 String::from("")
259 | |             },
    | |_____________^ help: replace it with: `self.label().unwrap_or_default()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_unwrap_or_default
    = note: `#[warn(clippy::manual_unwrap_or_default)]` on by default

warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true
  --> src/rank.rs:21:1
   |
21 | impl Into<i64> for Rank {
   | ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see
           https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into
   = note: `#[warn(clippy::from_over_into)]` on by default
help: replace the `Into` implementation with `From<rank::Rank>`
   |
21 ~ impl From<Rank> for i64 {
22 ~     fn from(val: Rank) -> Self {
23 ~         match val {
   |

warning: using `clone` on type `Order` which implements the `Copy` trait
  --> src/main.rs:97:45
   |
97 | ...                   catalog.sort_by(args.order.clone());
   |                                       ^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `args.order`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> src/main.rs:123:45
    |
123 | / ...                   match catalog.navigator().new_page_size() {
124 | | ...                       Some(size) => { catalog.set_page_size(size) },
125 | | ...                       None => {},
126 | | ...                   }
    | |_______________________^ help: try: `if let Some(size) = catalog.navigator().new_page_size() { catalog.set_page_size(size) }`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
    = note: `#[warn(clippy::single_match)]` on by default

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/main.rs:146:80
    |
146 |             match check_database_and_files(&directory(args.clone().directory), &database) {
    |                                                                                ^^^^^^^^^ help: change this to: `database`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/main.rs:162:73
    |
162 |                 Some(ref abs_directory) => match copy_all_picture_files(&ext_directory, &abs_directory) {
    |                                                                         ^^^^^^^^^^^^^^ help: change this to: `ext_directory`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/main.rs:162:89
    |
162 |                 Some(ref abs_directory) => match copy_all_picture_files(&ext_directory, &abs_directory) {
    |                                                                                         ^^^^^^^^^^^^^^ help: change this to: `abs_directory`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/main.rs:166:54
    |
166 |                 None => match copy_all_picture_files(&ext_directory, &directory(args.clone().directory)) {
    |                                                      ^^^^^^^^^^^^^^ help: change this to: `ext_directory`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> src/main.rs:171:21
    |
171 |               None => match args.add {
    |  _____________________^
172 | |                 Some(ref abs_directory) => match load_picture_entries_from_directory_into_db(database, &abs_directory, false) {
173 | |                     Ok(pictures_entries) => {
174 | |                         println!("the following pictures have been inserted in the database:");
...   |
181 | |                 None => {},
182 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try
    |
171 ~             None => if let Some(ref abs_directory) = args.add { match load_picture_entries_from_directory_into_db(database, &abs_directory, false) {
172 +                 Ok(pictures_entries) => {
173 +                     println!("the following pictures have been inserted in the database:");
174 +                     for picture_entry in pictures_entries {
175 +                         println!("{}", picture_entry.file_path)
176 +                     }
177 +                 },
178 +                 Err(err) => return Err(anyhow!(err)),
179 +             } }
    |

warning: this expression creates a reference which is immediately dereferenced by the compiler
   --> src/main.rs:172:104
    |
172 |                 Some(ref abs_directory) => match load_picture_entries_from_directory_into_db(database, &abs_directory, false) {
    |                                                                                                        ^^^^^^^^^^^^^^ help: change this to: `abs_directory`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: `gsr` (bin "gsr") generated 20 warnings (run `cargo clippy --fix --bin "gsr"` to apply 20 suggestions)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.84s
