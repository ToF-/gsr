   Compiling gsr v1.1.2 (/Users/christophethibaut/Coding/gsr)
error[E0277]: a value of type `HashSet<std::string::String>` cannot be built from an iterator over elements of type `&std::string::String`
    --> src/loader.rs:48:8
     |
48   |     }).collect())
     |        ^^^^^^^ value of type `HashSet<std::string::String>` cannot be built from `std::iter::Iterator<Item=&std::string::String>`
     |
     = help: the trait `FromIterator<&std::string::String>` is not implemented for `HashSet<std::string::String>`
             but trait `FromIterator<std::string::String>` is implemented for it
     = help: for that trait implementation, expected `std::string::String`, found `&std::string::String`
note: the method call chain might not have had the expected associated types
    --> src/loader.rs:45:28
     |
45   |       Ok(database_file_paths.iter().filter(|file_path| {
     |  ________-------------------_^^^^^^_-
     | |        |                   |
     | |        |                   `Iterator::Item` is `&String` here
     | |        this expression has type `&HashSet<String>`
46   | |         let path = PathBuf::from(file_path);
47   | |         ! path.exists()
48   | |     }).collect())
     | |______- `Iterator::Item` remains `&String` here
note: required by a bound in `std::iter::Iterator::collect`
    --> /Users/christophethibaut/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/library/core/src/iter/traits/iterator.rs:1967:19
     |
1967 |     fn collect<B: FromIterator<Self::Item>>(self) -> B
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `Iterator::collect`

For more information about this error, try `rustc --explain E0277`.
error: could not compile `gsr` (bin "gsr") due to 1 previous error
